install.packages('h5')
?substr
library(visdom)
library(devtools)
install.packages('devtools')
install.packages('RPostgreSQL')
require(RPostgreSQL)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
dbGetQuery(con, 'select * from information_schema.tables')
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
getwd()
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
setwd('~/Dropbox/repos/HVACDisagg')
getwd()
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
un
pw
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
dbListConnections()
dbListConnections(drv)
dbDisconnect(dbListConnections(drv))
dbDisconnect(dbListConnections(drv)[1])
dbListConnections(drv)[1]
dbListConnections(drv)[[1]]
dbDisconnect(dbListConnections(drv)[[1]])
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
for (c in dbListConnections(drv)){
dbDisconnect(c)
}
un
rm(c('un','pw'))
rm(c(un,pw))
rm(un)
un
rm(um,pw)
rm(un,pw)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
tables = dbGetQuery(con, "select * from information_schema.tables where table_schema = ''university''")
tables = dbGetQuery(con, "select * from information_schema.tables where table_schema = '''university'''")
tables
"select * from information_schema.tables where table_schema = '''university'''"
tables = dbGetQuery(con, "select * from information_schema.tables where table_schema = \'university\'")
tables
tables = dbGetQuery(con, "select * from information_schema.tables where table_schema = \'university\' order by table_name")
tables
meta = dbGetQuery(con, "select * from university.metadata LIMIT 10")
meta
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
meta
distinct(meta$city)
unique(meta$city)
sum(meta$city == 'Austin')
colnames(meta)
meta = dbGetQuery(con, "select dataid, building_type, city, state from university.metadata")
meta
datacounts
merge(datacounts, meta)
homesuse = meta[(meta$counts == max(meta$counts)) & (meta$city == 'Austin') , ]
max(meta$counts)
meta = merge(datacounts, meta, type = 'leftinner')
homesuse = meta[(meta$counts == max(meta$counts)) & (meta$city == 'Austin') , ]
meta
mets$counts
meta$counts
head(meta)
homesuse = meta[(meta$count == max(meta$count)) & (meta$city == 'Austin') , ]
homesuse
dim(homesuse)
weather = dbGetQuery("SELECT * from university.weather WHERE latitude == 30.292432")
weather = dbGetQuery(con, "SELECT * from university.weather WHERE latitude == 30.292432")
weather = dbGetQuery(con, "SELECT * from university.weather WHERE latitude = 30.292432")
head(weather)
sprintf('put thext here: %s', 'hello')
x - sprintf('put thext here: %s', 'hello')
x
x = sprintf('put thext here: %s', 'hello')
x
x = sprintf('put thext here: %s', 1234)
x
x = sprintf('put thext here: %s', homesuse$dataid[1])
x
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
querytmp = "SELECT * FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s "
query = sprintf(querytmp, homesuse$dataid[1])
query
loaddata = dbGetQuery(con,query)
querytmp = "SELECT * FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, homesuse$dataid[1])
loaddata = dbGetQuery(con,query)
head(loaddata)
localhour
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, homesuse$dataid[1])
loaddata = dbGetQuery(con,query)
loaddata$localhour[1]
weather$localhour[1]
strptime( format="%d-%m-%Y %H:%M:%S %z", loaddata$localhour[1], tz="UTC" )
strptime( format="%Y-%m-%d %H:%M:%S %z", loaddata$localhour[1], tz="UTC" )
strptime( format="%Y-%m-%d %H:%M:%S %z", loaddata$localhour[1], tz="UTC" )
strptime( format="%Y-%m-%d %H:%M:%S %z", loaddata$localhour[1] )
class(loaddata$localhour[1])
merge(head(loaddata), weather, type = 'leftinner')
data = merge(loaddata, weather, type = 'leftinner')
data = merge(loaddata, weather, type = 'leftinner')
data.head()
head(data)
data$localhour[1]
weather = dbGetQuery(con, "SELECT localhour, temperature from university.weather WHERE latitude = 30.292432")
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, homesuse$dataid[1])
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
head(data)
## Pull Weather Data
weather = dbGetQuery(con, "SELECT localhour, temperature as out_temperature from university.weather WHERE latitude = 30.292432")
## Pull one home's Load data
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, homesuse$dataid[1])
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
data
head(data)
data = read.csv('data/testhome1.csv')
head(data[,['air1','air2']])
head(data[,c('air1','air2')])
head(data[,c('air1','air2','air3','airwindowunit')])
head(data[,c('air1','air2','air3','airwindowunit1')])
sum(data[,c('air1','air2','air3','airwindowunit1')])
sum(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
head(data)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','heating','cooling')]
data$cooling = rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','heating','cooling')]
## Write a csv
source('~/Dropbox/repos/HVACDisagg/PecanDataLoad.R', echo=TRUE)
## Pull one home's Load data
dataid = homesuse$dataid[1]
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, dataid)
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
## Aggregate cooling and heating data
data$cooling = rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','heating','cooling')]
## Write a csv
write.csv(x = data, file = sprintf('data/pecandata_%s',  dataid))
write.csv(x = data, file = sprintf('pecandata_%s.csv',  dataid))
## Pull one home's Load data
dataid = homesuse$dataid[2]
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, dataid)
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
## Aggregate cooling and heating data
data$cooling = rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','heating','cooling')]
## Write a csv
write.csv(x = data, file = sprintf('pecandata_%s.csv',  dataid))
## Pull one home's Load data
dataid = homesuse$dataid[3]
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, dataid)
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
## Aggregate cooling and heating data
data$cooling = rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','heating','cooling')]
## Write a csv
write.csv(x = data, file = sprintf('pecandata_%s.csv',  dataid))
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
## Pull one home's Load data
for (dataid in homesuse$dataid[1:3]){
querytmp = "SELECT dataid, localhour, use, gen, air1, air2, air3, airwindowunit1, furnace1, furnace2 FROM university.electricity_egauge_hours WHERE localhour BETWEEN '01-01-2015' AND '01-01-2017' AND dataid = %s;"
query = sprintf(querytmp, dataid)
loaddata = dbGetQuery(con,query)
data = merge(loaddata, weather, type = 'leftinner')
## Aggregate cooling and heating data
data$cooling = rowSums(data[,c('air1','air2','air3','airwindowunit1')], na.rm = TRUE)
data$heating = rowSums(data[,c('furnace1','furnace2')], na.rm = TRUE)
data = data[,c('localhour','dataid','use','gen','temperature','heating','cooling')]
## Write a csv
write.csv(x = data, file = sprintf('pecandata_%s.csv',  dataid))
}
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
setwd('~/Dropbox/repos/HVACDisagg')
require(RPostgreSQL)
setwd('~/Dropbox/repos/HVACDisagg')
setwd('~/Dropbox/repos/HVACDisagg/')
source('functions/classModelFit.R')
require(ggplot2)
source('functions/HVACdisagg.R')
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
source('~/repos/HVACDisagg/TrialRun.R', echo=TRUE)
? classModelFit
source('~/repos/HVACDisagg/functions/classModelFit.R', echo=TRUE)
source('~/repos/HVACDisagg/functions/classModelFit.R', echo=TRUE)
install.packages(roxygen)
install.packages('roxygen')
install.packages('roxygen2')
devtools::document()
install.packages('roxygen2')
install.packages('Rcpp')
install.packages("Rcpp")
install.packages("Rcpp")
install.packages("Rcpp")
